# The ReliefWeb API
# Interactive API documentation for the data API of Reliefweb.int. ReliefWeb is a leading source of information on global crises and disasters.  Our continuous coverage and archive going back to the 1970s makes ReliefWeb an unparalleled resource for both current and historical data on humanitarian response. The vast majority of content on ReliefWeb has been contributed by humanitarian partners. We owe it to the community to make data more accessible and reusable, so that developers can build tools that increase exposure for valuable content and facilitate analysis for better decisions.
# The version of the OpenAPI document: v1
# Contact: api@reliefweb.int
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

type PostParams {

  # Specify the terms of your fuzzy search. The default is no query. 
  query[value]: String!

  query[operator]-post: QueryOperatorPost

  # Specify which fields to target with your search. You may use boost syntax here, see the Advanced API Usage documentation. 
  query[fields][]-post: [String!]

  # Field to filter by. Every condition must contain either a field or conditions property. 
  filter[field]-post: String!

  # Value for the field being filtered. Leave blank to require existence of the field, must be present for range and value conditions. 
  filter[value][]-post: [String!]

  filter[operator]-post: FilterOperatorPost

  # Reverse the filter to include those items that do not match. 
  filter[negate]-post: Boolean!

  # This property is used to combine conditions with a logical connector (the operator property). Every condition must contain one of the field or conditions properties. 
  filter[conditions][]-post: [String!]

  # Field to facet by. May include dates, references or the status field. 
  facets[field]-post: String!

  # Identifier for resulting facet data. Useful when faceting multiple ways on the same field. 
  facets[name]-post: String!

  # Limit the number of facets returned for non-date based facets. 
  facets[limit]-post: Int!

  # The sort order of non-date facets. Sorting may be by value or count of terms, and ascending or descending. count defaults to desc, value defaults to asc. 
  facets[sort]-post: String!

  # Apply all the same capabilities of the filter parameter to the specific results of this facet request. 
  facets[filter][]-post: [String!]

  facets[interval]-post: FacetsIntervalPost

  # Fields to include for each item. 
  fields[include][]: [String!]

  # Sub-fields to exclude from results. For example, if you include date you may exclude date.changed. 
  fields[exclude][]: [String!]

  # Sort the list results. Defaults to search relevance. Values in the form of fieldname:(asc|desc). 
  sort[]-post: [String!]

  # The maximum number of items to return for a list query. The default is 10 and the maximum 1000. 
  limit-post: Int!

  # The offset from which to return the items in a list query. Allows paging through all results. The default is 0. 
  offset-post: Int!

  profile: ProfilePost

  preset-post: PresetPost

}
